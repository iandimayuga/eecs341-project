:javascript
  tagit = function(event){
    if(event.keyCode == 13){
      $.post('/item/#{@item.id}/tag',
        {tag: $("#addtag").val()},
        function(data){
          $('#tagdiv').html(data);
          $("#addtag").keyup(function(event){tagit(event);});
        });
    }
  }
  $(document).ready(function() {
    $("#comment").validate({
      errorPlacement: function(error, element) {
        error.appendTo( element );
      },
      success: function(label) {
        $("#com-sub").removeClass("disabled");
      }
    });

    $("#comment").waypoint(function() {
      $("#revarea").focus();
    }, 
    {offset: 'bottom-in-view'});


    $("#addtag").keyup(function(event){tagit(event);});

    $("#borrow-btn").click(function(){
      $.ajax({
        url: '/item/#{@item.id}/borrow',
        dataType: 'json',
        success: function(data) {
          if(data.success){
            $('#success-modal').modal('show');
            $('#normal-control').hide();
            $('#borrow-control').removeClass('hide');
            $('#borrow-control').show();
          }
        }
      });
    });

    $("#alert-btn").click(function(){
      $.ajax({
        url: '/item/#{@item.id}/alert',
        dataType: 'json',
        success: function(data) {
          if(data.success){
            $('#alert-modal').modal('show');
            $('#alert-btn').hide();
            $('#alert-okay').show();
          }
        }
      });
    });

    $("#return-btn").click(function(){
      $.ajax({
        url: '/item/#{@item.id}/return',
        dataType: 'json',
        success: function(data) {
          if(data.success){
            $('#return-modal').modal('show');
            $('#borrow-control').hide();
            $('#normal-control').removeClass('hide');
            $('#normal-control').show();
          }
        }
      });
    });
  });

  

  vote = function(direction, review_id, id){
    $.post('/item/review',
      {dir: direction, review_id: review_id, divid: id},
      function(data){
        $('#' + id).html(data);
    });
  }
  karma = function(type, user_id) {
    $.post('/karma',
      {type:type, user_id: user_id},
      function(data){
        $("div#karmabtn").html(data);
      }
    );
  };


.spacer{:style => 'padding: 10px;'}
  %a{:href => '/item'}
    &larr; Go back to items
  %span.divider /
  %a{:href => '/search'}
    Start a new search
- if flash[:success]
  .alert-message.success=flash[:success]
- if flash[:error]
  .alert-message.error
    %p
      = flash[:error]
.row
  .span5
    %img.thumbnail.hilite{:src => @item.image.url, :width => 300, :height => 300}

  .span10.offset1
    .well
      %h1
        = @item.name
        %small can be borrowed for #{@item.max_loan} days.
      %small Shared since #{@item.created_at.strftime("%B %e, %Y")} by 
      %a.no-decor{:href => "/user/#{@item.user.id}"}
        #{@item.user.name} 
        - if @yours
          (you)
        %img.tiny-pic{:src => gravatar(@item.user), :width => 20, :height => 20}
      %br
      %div
        = @control_panel

      %h3 Description 
      :textile
        #{@item.desc}
      #tagdiv
        = haml :'item/_tags', :locals => {:item => @item}


#similar
  %h2 Similar Items
  %ul.media-grid
    - @similar.each do |item|
      %li
        = haml :'item/_item', :locals => {:item => item}


#reviews.multibox
  %h1 Reviews
  - if @item.reviews.empty?
    .rev There aren't any reviews yet! Awwww...
  - @i = 0
  - @item.reviews.each do |review|
    - @i += 1
    .rev
      %img.tiny-pic.right{:src => gravatar(review.user), :width => 40, :height => 40}
      %h3
        %a{:href => "/user/#{review.user.id}"}= review.user.name
        %small= review.created_at.strftime("%B %e, %Y")
      .bd
        :textile 
          #{review.body}
        %hr
        %div{:id => "revvote#{@i}"}= haml :'item/_votes', :locals => {:upd => review.upDownVotes,
                :helpfuls=>@helpfuls, :review_id=>review.id, :divid => "revvote#{@i}"}
                
  - if logged_in and @item.user != current_user
    .rev#end
      -if Review.first( :user => current_user, :item => @item) == nil
        %h3 Add a Review
        %form#comment{:method => "POST"}
          %input{:type => "hidden", :name => "item_id", :value => @item.id}
          %textarea#revarea.required{:name => 'body'}
          .span5.right
            %h4 Let your voice be heard
            :textile
              Try to give constructive criticism and just plain helpful reviews in general.  This is helping others know what they are getting with this item, and letting the owner know about it too.  You comment will be parsed with "textile":http://textile.thresholdstate.com/.
          %br
          %input#com-sub.submit.btn.disabled{:type => 'submit', :value => 'Post Review'}
      - else
        %br
        :textile
          Thanks for reviewing!

#success-modal.modal.hide.fade.in
  .modal-header
    %a.close{:href => '#'} x
    %h3 Congratulations!
  .modal-body
    You've borrowed #{@item.name}.  #{@item.user.name} will be notified shortly and we'll put you in contact about how you can pick it up.
  .modal-footer
    %a.btn.primary{:onclick => "$('#success-modal').modal('hide')"} Cool!

#return-modal.modal.hide.fade.in
  .modal-header
    %a.close{:href => '#'} x
    %h3 Thanks!
  .modal-body
    #{@item.user.name} will be happy to have this back. You'll be notified as soon as they've told us they have it.
    - if @can_karma
      %div &nbsp;
      %div#karmabtn
        Add 
        %b=@item.user.name
        to your Trust list?
        %a.btn{:onclick =>"karma('trust',#{@item.user.id})"} Trust!
  .modal-footer
    %a.btn.primary{:onclick => "$('#return-modal').modal('hide')"} You're Welcome!

#alert-modal.modal.hide.fade.in
  .modal-header
    %a.close{:href => '#'} x
    %h3 Thanks!
  .modal-body
    You will receive an email alert when this #{@item.name} has been returned to #{@item.user.name}.
  .modal-footer
    %a.btn.primary{:onclick => "$('#alert-modal').modal('hide')"} Great!
